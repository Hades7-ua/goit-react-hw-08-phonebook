{"version":3,"file":"static/js/835.fd4759d8.chunk.js","mappings":"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","sources":["components/ContactsList/ContactList.styled.js","redux/contacts/selectors.js","components/ContactsList/ContactList.jsx","components/Filter/FilterContacts.styled.js","components/Filter/FilterContacts.jsx","components/Contacts/ContactForm.styled.js","components/Contacts/ContactForm.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactListWrapper = styled.ul`\n  list-style-type: none;\n  padding: 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin: 0 auto;\n`;\n\nexport const ContactListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 50px;\n  padding: 10px;\n  width: 480px;\n  background-color: #f5f5f5;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n\n  button {\n    background-color: #ff6b6b;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    padding: 5px 10px;\n    cursor: pointer;\n\n    &:hover {\n      background-color: #ff4949;\n    }\n  }\n`;\n\nexport const ContactName = styled.span`\n  font-weight: bold;\n`;\n\nexport const ContactNumber = styled.span`\n  color: #666;\n`;\n","export const selectContactsList = state => state.contacts.items;\nexport const selectFilters = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import React from 'react';\n\nimport {\n  ContactListWrapper,\n  ContactListItem,\n  ContactName,\n  ContactNumber,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectContactsList, selectFilters } from '../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n \n  const filter = useSelector(selectFilters);\n  console.log(filter)\n  const getFilteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n  return (\n    <ContactListWrapper>\n      {filteredContacts.map(contact => (\n        <ContactListItem key={contact.id}>\n          <div>\n            <ContactName>{contact.name}</ContactName>{' '}\n            <ContactNumber>{contact.number}</ContactNumber>\n          </div>\n          <button onClick={() => handleDelete(contact.id)}>Delete</button>\n        </ContactListItem>\n      ))}\n    </ContactListWrapper>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterWrapper = styled.div`\n  text-align: center;\n`;\n\nexport const FilterHeader = styled.label`\n  display: block;\n  margin-top: 50px;\n  font-weight: bold;\n\n  input {\n    width: 600px;\n    padding: 5px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterWrapper, FilterHeader } from './FilterContacts.styled';\nimport { filtersContacts } from '../../redux/contacts/contactsSlice';\nimport { selectFilters } from '../../redux/contacts/selectors';\nexport const FilterContacts = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilters);\n\n  const handleFilterChange = event => {\n    dispatch(filtersContacts(event.target.value));\n  };\n\n  return (\n    <FilterWrapper>\n      <FilterHeader>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Search your contacts.....\"\n          value={filter}\n          onChange={handleFilterChange}\n        />\n      </FilterHeader>\n    </FilterWrapper>\n  );\n};\n\nexport default FilterContacts;\n","import styled from 'styled-components';\n\nexport const FormContact = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Form = styled.form`\n  max-width: 300px;\n  margin: 50px auto;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding-top: 10px;\n  margin-top: 5px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\nbackground-color: black;\ncolor: white;\npadding: 10px;\nwidth: 100%;\nborder: none;\nborder-radius: 3px;\ncursor: pointer;\n\n&:hover {\n  color: orange;\n}\n`;\n","import { useState } from 'react';\nimport { Form, Input, Button, Label, FormContact } from './ContactForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContactsList } from '../../redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n  console.log(contacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const toLowerCaseName = name.toLowerCase();\n    const isNameThis = contacts.find(\n      contact => contact.name.toLowerCase() === toLowerCaseName\n    );\n\n    if (isNameThis) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name: name, number: number }));\n      setNumber('');\n      setName('');\n    }\n  };\n  return (\n    <FormContact>\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </Label>\n        <Label htmlFor=\"\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </Label>\n        <Button type=\"submit\">Add Contact</Button>\n      </Form>\n    </FormContact>\n  );\n};\n\nexport default ContactForm;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from '../components/ContactsList/ContactList';\nimport { FilterContacts } from '../components/Filter/FilterContacts';\n\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectIsLoading } from '../redux/contacts/selectors';\nimport { ContactForm } from '../components/Contacts/ContactForm';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div>\n        <title>Your contacts</title>\n        <ContactForm />\n        <div>{isLoading && 'Request in progress...'}</div>\n        <FilterContacts />\n        <ContactList />\n      </div>\n    </>\n  );\n}\n"],"names":["ContactListWrapper","styled","_templateObject","_taggedTemplateLiteral","ContactListItem","_templateObject2","ContactName","_templateObject3","ContactNumber","_templateObject4","selectContactsList","state","contacts","items","selectFilters","filter","selectIsLoading","isLoading","ContactList","dispatch","useDispatch","useSelector","console","log","filteredContacts","contact","name","toLowerCase","includes","_jsx","children","map","_jsxs","number","onClick","contactId","id","deleteContact","FilterWrapper","FilterHeader","FilterContacts","type","placeholder","value","onChange","event","filtersContacts","target","FormContact","Form","Label","Input","Button","_templateObject5","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","e","_e$currentTarget","currentTarget","onSubmit","preventDefault","toLowerCaseName","find","alert","concat","addContact","htmlFor","required","Contacts","useEffect","fetchContacts","_Fragment"],"sourceRoot":""}